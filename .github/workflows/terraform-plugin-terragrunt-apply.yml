on: 
  workflow_call:
    inputs:
      repo:
        required: false
        type: string
    secrets:
      AWS_ACCESS_ROLE:
        required: true
      AWS_DEFAULT_REGION:
        required: true
jobs:
  terraform-plugin-terragrunt-apply:
    name: terraform-plugin-terragrunt-apply
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_ROLE: ${{ secrets.AWS_ACCESS_ROLE }}
      AWS_DEFAULT_REGION: us-east-1
    steps:
    - name: Check out code  
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Setup Terragrunt
      uses: autero1/action-terragrunt@v1.1.0
      with:
        terragrunt_version: 0.36.6

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ACCESS_ROLE }}
        role-session-name: github-action-job
        role-duration-seconds: 600
        aws-region: us-east-1

    - name: Terragrunt Initialized  
      id: init
      run: terragrunt run-all init  -input=false          

    - name: Terragrunt Validate  
      id: validate  
      run: terragrunt run-all validate


    - name: Terragrunt Plan
      id: plan
      run: terragrunt run-all plan -no-color
      continue-on-error: true

    - name: Update Pull Request
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terragrunt Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terragrunt Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terragrunt Plan üìñ\`${{ steps.plan.outcome }}\`
          #### Terragrunt Validation ü§ñ\`${{ steps.validate.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          Terragrunt \n
          ${{ steps.plan.outputs.stdout }}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terragrunt Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1


    - name: Terragrunt Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terragrunt run-all apply --terragrunt-non-interactive -auto-approve