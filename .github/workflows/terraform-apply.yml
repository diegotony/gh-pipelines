on: 
  workflow_call:
    inputs:
      repo:
        required: false
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_DEFAULT_REGION:
        required: true

jobs:
  apply:
    name: Apply
    runs-on: ubuntu-latest
    steps:
    - name: Check out code  
      uses: actions/checkout@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Run a Terraform init  
      uses: hashicorp/terraform-github-actions@master
      with:
        entrypoint: terraform
        args: init

    - name: Run a Terraform plan   
      id: plan 
      uses: hashicorp/terraform-github-actions@master
      with:
        entrypoint: terraform
        args: plan -input=false -no-color -out=tfplan 

    - name: Apply Terraform
      if: steps.plan.outcome == 'success'
      id: apply
      continue-on-error: true
      run: |
        cd terraform/${{ matrix.path }}
        terraform apply \
          -input=false \
          -no-color \
          tfplan   

    - name: Post Plan and Apply to GitHub PR
      if: steps.plan.outcome == 'success' && steps.apply.outcome == 'success'
      uses: mshick/add-pr-comment@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        repo-token-user-login: 'github-actions[bot]'
        message: |
          Applying **${{ matrix.path }}**:

          ```diff
          ${{ env.PLAN }}
          ```

          ```
          ${{ steps.apply.outputs.stdout }}
            ``` 

    - name: Post Apply Failure
      if: steps.apply.outcome == 'failure'
      uses: mshick/add-pr-comment@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        repo-token-user-login: 'github-actions[bot]'
        message: |
          Apply failed for **${{ matrix.path }}**:

          ```
          ${{ steps.apply.outputs.stderr }}
          ```  